@model elearning_b1.Models.ReadingSkill

@{
    ViewData["Title"] = "Exercise: " + Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-4">
    <h1 class="text-primary mb-3 text-center">@Model.Title</h1>
    <hr />

    <!-- Hiển thị nội dung bài đọc -->
    <div class="mb-4">
        <div id="reading-content" class="border rounded p-4" style="background-color: #f9f9f9; line-height: 1.8;">
            @Html.Raw(Model.Content)
        </div>
    </div>

    <!-- Hiển thị các câu hỏi và lựa chọn -->
    <form method="post" action="@Url.Action("Submit", new { id = Model.Id })">
        @foreach (var question in Model.Questions)
        {
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title text-dark">
                        <strong>Question @question.Id:</strong> @question.Text
                    </h5>

                    <div class="mt-3">
                        @foreach (var option in question.Options)
                        {
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="radio"
                                       name="answers[@question.Id]"
                                       value="@option.Id"
                                       id="option_@option.Id"
                                @(option.IsUserChoice ? "checked" : "") />
                                <label class="form-check-label" for="option_@option.Id">
                                    @option.Text
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Nút trả lời -->
        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary btn-lg">Submit Answers</button>
        </div>
    </form>
</div>

<!-- Popup từ điển -->
<div id="dictionary-popup"
     class="card shadow-lg p-2"
     style="display: none; position: fixed; background: white; border: 2px solid #007bff; border-radius: 8px; z-index: 1000; padding: 10px; max-width: 300px; opacity: 0;">
    <h5 class="card-title" id="dictionary-word" style="font-size: 1.2rem; font-weight: 600; color: #007bff;"></h5>
    <p id="dictionary-definition" class="text-muted" style="font-size: 1rem; line-height: 1.4; color: #333;"></p>
</div>

<style>
    /* Cửa sổ popup với thiết kế tinh tế */
    #dictionary-popup {
        transition: opacity 0.3s ease-out, transform 0.3s ease-out; /* Hiệu ứng chuyển động mượt mà */
        transform: translateY(30px); /* Popup di chuyển từ dưới lên */
        max-width: 250px; /* Kích thước tối đa của popup */
    }

    #dictionary-word {
        font-size: 1.2rem;
        font-weight: 600;
        color: #007bff; /* Màu xanh dương cho từ cần dịch */
        margin-bottom: 5px;
        text-align: center;
    }

    #dictionary-definition {
        font-size: 1rem;
        color: #333;
        line-height: 1.4;
        text-align: center;
    }

    /* Đảm bảo nội dung popup được căn chỉnh hợp lý */
    #dictionary-popup p {
        padding: 5px;
        background-color: #f5f5f5;
        border-radius: 6px;
    }

    /* Style cho reading-content */
    #reading-content {
        white-space: pre-wrap;
        cursor: text;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('mouseup', async function () {
            const selection = window.getSelection();
            const selectedText = selection.toString().trim();

            if (selectedText) {
                const rect = selection.getRangeAt(0).getBoundingClientRect();
                const popup = document.getElementById('dictionary-popup');

                // Tính toán vị trí hiển thị popup
                let top = rect.bottom + window.scrollY + 10;
                let left = Math.min(rect.left + window.scrollX, window.innerWidth - popup.offsetWidth - 20);

                // Điều chỉnh vị trí nếu popup vượt quá phần dưới của màn hình
                if (top + popup.offsetHeight > window.innerHeight + window.scrollY) {
                    top = rect.top + window.scrollY - popup.offsetHeight - 10;
                }

                // Cập nhật vị trí và hiển thị popup
                popup.style.top = `${top}px`;
                popup.style.left = `${left}px`;
                popup.style.display = 'block';

                // Hiệu ứng popup xuất hiện từ dưới lên
                setTimeout(function () {
                    popup.style.opacity = 1;
                    popup.style.transform = 'translateY(0)';
                }, 10); // Để cho hiệu ứng chuyển động được bắt đầu ngay sau khi popup xuất hiện

                try {
                    // Gửi yêu cầu đến MyMemory API để dịch từ
                    const res = await fetch(`https://api.mymemory.translated.net/get?q=${encodeURIComponent(selectedText)}&langpair=en|vi`, {
                        method: "GET"
                    });

                    const data = await res.json();

                    // Kiểm tra xem có trả về dữ liệu hay không
                    if (data.responseData && data.responseData.translatedText) {
                        document.getElementById('dictionary-definition').textContent = data.responseData.translatedText;
                    } else {
                        document.getElementById('dictionary-definition').textContent = "Không tìm thấy nghĩa của từ này.";
                    }
                } catch (error) {
                    console.error('Error:', error);
                    document.getElementById('dictionary-definition').textContent = "Đã xảy ra lỗi khi kết nối đến dịch vụ dịch.";
                }
            }
        });

        // Đóng popup khi nhấp ra ngoài
        document.addEventListener('click', function (event) {
            const popup = document.getElementById('dictionary-popup');
            if (!popup.contains(event.target) && event.target !== document.getElementById('reading-content')) {
                closePopup();
            }
        });

        function closePopup() {
            document.getElementById('dictionary-popup').style.display = 'none';
        }
    </script>
}
