@model elearning_b1.Models.ReadingSkill

@{
    ViewData["Title"] = "Exercise: " + Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-4">
    <h1 class="text-primary mb-3 text-center">@Model.Title</h1>
    <hr />

    <div class="row">
        
        <div class="col-12" id="reading-column">
            <div id="reading-content" class="border rounded p-4" style="background-color: #f9f9f9; line-height: 1.8;">
                @Html.Raw(Model.Content)
            </div>
        </div>

        
        <div class="col-12" id="dictionary-container" style="display: none; position: absolute; background-color: #fff; padding: 10px; border: 2px solid #007bff; border-radius: 8px; z-index: 1000; max-width: 300px;">
            <span id="close-popup" style="cursor: pointer; color: #007bff; font-size: 18px;">&times;</span>
            <div>
                <h5 id="dictionary-word" style="font-size: 1.1rem; font-weight: 600; color: #007bff;"></h5>
                <p id="dictionary-definition" class="text-muted" style="font-size: 1rem; line-height: 1.4; color: #333;"></p>
            </div>
        </div>
    </div>
    <hr />
    <!-- Hiển thị các câu hỏi và lựa chọn -->
    <form method="post" action="@Url.Action("Submit", new { id = Model.Id })">
        @foreach (var question in Model.Questions)
        {
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title text-dark">
                        <strong>Question @question.Id:</strong> @question.Text
                    </h5>

                    <div class="mt-3">
                        @foreach (var option in question.Options)
                        {
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="radio"
                                       name="answers[@question.Id]"
                                       value="@option.Id"
                                       id="option_@option.Id"
                                @(option.IsUserChoice ? "checked" : "") />
                                <label class="form-check-label" for="option_@option.Id">
                                    @option.Text
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Nút trả lời -->
        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary btn-lg">Submit Answers</button>
        </div>
    </form>
</div>


<style>
#reading-content {
     white-space: pre-line; /* Loại bỏ thụt đầu dòng */
     cursor: text;
 }

#reading-column {
    position: relative;
}

#dictionary-container {
    display: none;  /* Ẩn phần dịch khi không có từ nào được chọn */
    position: absolute;
    background-color: #fff;
    padding: 10px;
    border: 2px solid #007bff;
    border-radius: 8px;
    z-index: 1000;
    max-width: 300px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    line-height: 1.6;
}

    #dictionary-container {
    display: none;  /* Ẩn phần dịch khi không có từ nào được chọn */
    position: absolute;
    background-color: #fff;
    padding: 10px;
    border: 2px solid #007bff;
    border-radius: 8px;
    z-index: 1000;
    max-width: 300px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

#dictionary-word {
    font-size: 1.1rem;
    font-weight: 600;
    color: #007bff;
}

#dictionary-definition {
    font-size: 1rem;
    color: #333;
    line-height: 1.4;
}

#close-popup {
    cursor: pointer;
    color: #007bff;
    font-size: 18px;
    text-align: right;
    display: block;
}
</style>

<script>
    document.addEventListener('mouseup', async function () {
    const selection = window.getSelection();
    const selectedText = selection.toString().trim();

    if (selectedText) {
        const rect = selection.getRangeAt(0).getBoundingClientRect();
        const container = document.getElementById('dictionary-container');
        const readingColumn = document.getElementById('reading-column');

        // Hiển thị phần container dịch
        container.style.display = 'block';

        // Vị trí popup
        let top = rect.bottom + window.scrollY + 10;  // Đặt popup dưới văn bản đã chọn
        let left = Math.min(rect.left + window.scrollX, window.innerWidth - container.offsetWidth - 20);  // Căn trái

        // Điều chỉnh vị trí nếu popup vượt quá phần dưới của màn hình
        if (top + container.offsetHeight > window.innerHeight + window.scrollY) {
            top = rect.top + window.scrollY - container.offsetHeight - 10;  // Đặt popup ở trên văn bản nếu không đủ không gian phía dưới
        }

        container.style.top = `${top}px`;
        container.style.left = `${left}px`;

        try {
            // Gửi yêu cầu đến MyMemory API để dịch từ
            const res = await fetch(`https://api.mymemory.translated.net/get?q=${encodeURIComponent(selectedText)}&langpair=en|vi`, {
                method: "GET"
            });

            const data = await res.json();

            // Kiểm tra xem có trả về dữ liệu hay không
            if (data.responseData && data.responseData.translatedText) {
                document.getElementById('dictionary-definition').textContent = data.responseData.translatedText;
                document.getElementById('dictionary-word').textContent = selectedText;
            } else {
                document.getElementById('dictionary-definition').textContent = "Không tìm thấy nghĩa của từ này.";
                document.getElementById('dictionary-word').textContent = selectedText;
            }
        } catch (error) {
            console.error('Error:', error);
            document.getElementById('dictionary-definition').textContent = "Đã xảy ra lỗi khi kết nối đến dịch vụ dịch.";
            document.getElementById('dictionary-word').textContent = selectedText;
        }
    } else {
        // Ẩn phần dịch khi không có từ nào được chọn
        document.getElementById('dictionary-container').style.display = 'none';
    }
});

// Đóng popup khi nhấn vào dấu 'x'
document.getElementById('close-popup')?.addEventListener('click', function () {
    document.getElementById('dictionary-container').style.display = 'none';
});

</script>
